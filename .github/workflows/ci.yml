name: CI

################################################################################
# 1 ▸ Déclencheurs
################################################################################
on:
  push:
    branches: [main]     # CI sur push dans main (gratuit dépôts publics)
  pull_request:          # CI aussi sur toutes les PR

################################################################################
# 2 ▸ Permissions minimales (principle of least privilege)
################################################################################
permissions:
  contents: read

################################################################################
# 3 ▸ Job tests
################################################################################
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      # 3.1 – Récupération du code
      - uses: actions/checkout@v4

      # 3.2 – Installation Python + cache pip
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      # 3.3 – Dépendances dev + paquet en editable
      - name: Installer les dépendances
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .

      # 3.4 – Exécution des tests, échec <80 % de couverture
      - name: Exécuter les tests
        run: pytest --cov=src --cov-report=xml --cov-fail-under=80

      # 3.5 – Artefact de couverture (toujours — pratique pour debug)
      - name: Téléverser artefact couverture
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

      # 3.6 – Upload vers Coveralls (facultatif via secret USE_COVERALLS=true)
      - name: Publier sur Coveralls
        if: env.USE_COVERALLS == 'true' &&
            github.event_name == 'push' &&
            github.ref == 'refs/heads/main'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          USE_COVERALLS:        ${{ secrets.USE_COVERALLS }}
        run: |
          pip install coveralls
          coveralls --service=github

  coverage:
    needs: test
    if: github.repository_owner == 'GordoxGit' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true
          verbose: true
